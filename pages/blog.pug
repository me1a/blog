mixin contents(content, isroot)
  div(class=isroot? 'open contents':'contents')
    each item in content
      div(class=isroot ? 'root item': 'item')
        div(class=item.children? 'name': 'link')
          i(class=item.children?'iconfont icon-folder-close':'iconfont icon-file')
          if  item.children
            span #{item.name}
          else
            a(href=item.url) #{item.title}
        div(class=isroot ? 'children': 'child')
          if item.children
            +contents(item.children)

mixin lasts(last)
  div.last
    each item in last
      .item
        a(href=item.url) #{item.name}
        p #{item.des}
        p.time #{item.updateTime}

<!DOCTYPE html>
html
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible", content="ie=edge")
    title It`s me
    link(rel="stylesheet", href="//at.alicdn.com/t/font_1197539_q23260lvbve.css")
    link(rel="stylesheet", href="/static/css/blog.css")
    script
      != 'window._SEARCH_DATA = ' + JSON.stringify(search)
    script
      != 'window._LAST_DATA = ' + JSON.stringify(last)
  body
      .banner
        //- .title It`s me
        .input
          input.search
          .result
      .main
        .lasts
          +lasts(last.sort((a, b) => a.updateTime < b.updateTime ? 1 : -1).slice(0, 15))
        .all
          h4 目录
          +contents(tree, true)

  script.

    function changeHandle(e) {
      console.log(e)
    }

    document.querySelector('.open.contents').addEventListener('click', (e) => {
      if(e.target.parentElement.getAttribute('class').includes('name')) {
        const tc = e.target.parentElement.parentElement.querySelector('.children')
        const b = tc.getAttribute('class').includes('open')
        const c = document.querySelectorAll('.children')
        for(let i = 0; i< c.length; i++){
          c[i].setAttribute('class', 'children')
        }
        tc.setAttribute('class', b ? 'children': 'children open')
      }
    })
    const result = document.querySelector('.result')
    const search = document.querySelector('.search')
    search.addEventListener('input', (e) => {
      const value  = e.target.value
      result.innerHTML = initResult(value)

    })
    function initResult(v) {
      let html = ''
      _SEARCH_DATA.forEach(item => {
        if(item.title.includes(v)) {
          html += `<a href='${item.url}'>${item.title.replace(new RegExp(v, 'g'), `<b>${v}</b>`)}</a>`
        }
      })
      html = html == '' ? '<div>未找到结果</div>': html
      return v ? html : ''
    }
    result.innerHTML = initResult(search.value)
    search.focus()

    const sidebar = document.querySelector('.all')
    document.addEventListener('scroll', (e) => {
      const s = document.documentElement.scrollTop
      console.log()
      if(s > 416) {
        sidebar.style.left = sidebar.offsetLeft + 'px'
        sidebar.setAttribute('class', 'all fix')
      } else {
        sidebar.setAttribute('class', 'all')
      }
    })